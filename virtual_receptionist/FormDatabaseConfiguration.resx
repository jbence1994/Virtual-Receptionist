<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonConnect.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARLSURBVFhHrZVL
        bBtVGIWHBRJLugGxRgixQGLLErGoxApWsEIgdrBhVbFBYgFCbFi1SelDCa2fiR/jOLbHk7Ede8YeJ7Zj
        ZzxxkiYlbgNJnCaxA2lpQ9vDf6cdak8uaR5efPZ4Zv5zzr33v9cCgB5UVT2TzhXOprXitylVD6bUQi6l
        6QZdrxJ7xAOilVKLC4qq63Qdp+c/K7niJ6l8/nWn3vOwPsrl8otptfCpoharJIhTspnW9B+S+fwrTjMe
        QlrT3kyr+m2O0Gm5p2iFL3im3QgKm2K+QD+4G5XlN3jGNkIwnnzIKewLUkbF5ZGRj3nGNsKg13s/JMlQ
        cgWuyEkZVzK4OhrAgMfzIc/YRrjgdt8n8IvPj5FYArHU5InDJDI5hKUJDAWCYJqMIwfohoqs9O7IGHzR
        GEYpWDAhQ0wqiMgpsBkLxCX4x+PwjI1jOBjCRa+3R6NL6/AA1yORB7zCfsAGEpImPucZ2wirG63HsWyW
        lsDHFTkpv4oiZhdvoGgYP/KMbYT4ZPafxZUmNra2UTJNDAWfrd9xYKN1R6OQVBWNm79hs91BqW5iJJH4
        jGds818PuMbGoM3M4JoYQUieQPOPNcwt30SCBNnzsKJA1vKQ83lkpqagVWYwZRiYacxjsXkLrZ02Wts7
        MJeWkdKLGA6F7WCH9wC9wG1CfzyBeC6HoCxb9/TZWdQWFlCdn4dem6UQ01Y4kYL5YjEMh8OgLd2j81Tr
        8ADlucZDXmE/YLOWr1a/4xnbCLT+j9bubFmj8kTHuULHgQ1mLJ2BubyMdeqryanSOZ6xjdUDrHnYFLOC
        YFK21k/RdYipFK4GApYwWxYbOl6tKWd1o5KEeDZn1du90FxbR65cxuXR0ecvAQtgp2fi7Ps6HUCVuQZu
        kGChWrPuMdGtzq4F63Davli6dRv1pSWUzTmrKVlPsGC23lPNwwMEksn97oL/4yKdE1doRGz0vOdO2GCu
        RCQMx7JfkdELTmMbYZ3WXy1XrO3HEzoug74RuLN1hGp3INY7TzA7i+G59jvcALSF9tmBwfbwYrNpnQdM
        iI3YKe5k0E8zIsbp+0mfMLzawjPjXv4WjZ23DwSgIqsHLvn91r5nf0LhCcVa699bm1Yzsef5map1sk3X
        6ygY8xArqz0GvvwCrinTPfc4pHkBWszACVtrLx0w7Exnv6OZDLKlErKVGiLGNk/8SAQbd1/rCXDe5fra
        aX4YXrXBFT4y5u7ZngDsg0K8T+IV4nG3mZMBjxdhY4cvfGTaHx0IYDPgdp8573Z/cMHl+p4M08Qe207D
        kgZPzoSHupsvegzMjiIanW/C1fbLBwI4GcqsvBSa3apwhU6L2VmJ1Pde5Rrb0Hp9yS3uF0bnEtfYJmzu
        itzC/rHENbahF9KOgn6zwTW2iRidnzhF/UTiGtuwJqGX2o6ifvEoZPz5Lte4m1D9r7fo5QniXlfxadin
        5itGzPZ7AIR/AXG6gCmpeZ0BAAAAAElFTkSuQmCC
</value>
  </data>
</root>