<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonConnect.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAN0AAADdAXBTogcAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAES0lEQVRYR62VS2wbVRiFhwUSS7oBsUYIsUBiyxKxqMQKVrBCIHawYVWxQWIBQmxYtUnpQwmtn4kf
        4zi2x5OxHXvGHie2Y2c8cZImJW4DSZwmsQNpaUPbw3+nHWpPLmkeXnz2eGb+c86997/XAoAeVFU9k84V
        zqa14rcpVQ+m1EIupekGXa8Se8QDopVSiwuKqut0HafnPyu54iepfP51p97zsD7K5fKLabXwqaIWqySI
        U7KZ1vQfkvn8K04zHkJa095Mq/ptjtBpuadohS94pt0ICptivkA/uBuV5Td4xjZCMJ58yCnsC1JGxeWR
        kY95xjbCoNd7PyTJUHIFrshJGVcyuDoawIDH8yHP2Ea44HbfJ/CLz4+RWAKx1OSJwyQyOYSlCQwFgmCa
        jCMH6IaKrPTuyBh80RhGKVgwIUNMKojIKbAZC8Ql+Mfj8IyNYzgYwkWvt0ejS+vwANcjkQe8wn7ABhKS
        Jj7nGdsIqxutx7FslpbAxxU5Kb+KImYXb6BoGD/yjG2E+GT2n8WVJja2tlEyTQwFn63fcWCjdUejkFQV
        jZu/YbPdQaluYiSR+IxnbPNfD7jGxqDNzOCaGEFInkDzjzXMLd9EggTZ87CiQNbykPN5ZKamoFVmMGUY
        mGnMY7F5C62dNlrbOzCXlpHSixgOhe1gh/cAvcBtQn88gXguh6AsW/f02VnUFhZQnZ+HXpulENNWOJGC
        +WIxDIfDoC3do/NU6/AA5bnGQ15hP2Czlq9Wv+MZ2wi0/o/W7mxZo/JEx7lCx4ENZiydgbm8jHXqq8mp
        0jmesY3VA6x52BSzgmBSttZP0XWIqRSuBgKWMFsWGzperSlndaOShHg2Z9XbvdBcW0euXMbl0dHnLwEL
        YKdn4uz7Oh1AlbkGbpBgoVqz7jHRrc6uBetw2r5YunUb9aUllM05qylZT7Bgtt5TzcMDBJLJ/e6C/+Mi
        nRNXaERs9LznTthgrkQkDMeyX5HRC05jG2Gd1l8tV6ztxxM6LoO+EbizdYRqdyDWO08wO4vhufY73AC0
        hfbZgcH28GKzaZ0HTIiN2CnuZNBPMyLG6ftJnzC82sIz417+Fo2dtw8EoCKrBy75/da+Z39C4QnFWuvf
        W5tWM7Hn+ZmqdbJN1+soGPMQK6s9Br78Aq4p0z33OKR5AVrMwAlbay8dMOxMZ7+jmQyypRKylRoixjZP
        /EgEG3df6wlw3uX62ml+GF61wRU+Mubu2Z4A7INCvE/iFeJxt5mTAY8XYWOHL3xk2h8dCGAz4HafOe92
        f3DB5fqeDNPEHttOw5IGT86Eh7qbL3oMzI4iGp1vwtX2ywcCOBnKrLwUmt2qcIVOi9lZidT3XuUa29B6
        fckt7hdG5xLX2CZs7orcwv6xxDW2oRfSjoJ+s8E1tokYnZ84Rf1E4hrbsCahl9qOon7xKGT8+S7XuJtQ
        /a+36OUJ4l5X8WnYp+YrRsz2ewCEfwFxuoApqXmdAQAAAABJRU5ErkJggg==
</value>
  </data>
</root>