/* LOGIN VALIDATOR DOKUMENTÁCIÓ *//* JUHÁSZ BENCE *//* 2018 */1) Validátor elérése--------------------Csatold a Login.cs-t az adott projekthez, létező fájlként /Add Existing Item/ majd hivatkozd be validátor névterét:using JuhaszBence.CSharp.LoginValidator;2) Példányosítás, konstruktor paraméterei-----------------------------------------Ha a Validátor osztályából (Login) objektumot szeretnénk példányosítani, úgy konstruktorhíváskor hat string típusú paramétert át kell adnunk neki:	a) server : string, Adatbázist tároló kiszolgáló /pl. "127.0.0.1", "localhost", bármely olyan IP cím, amely adatbázis-kiszolgálóként funkcionál, stb./		b) database : string, Adatbázis neve /pl. "usermanagement", "adatbazis1", "adatbazis2", stb./		c) table : string, Adatbázisban lévő olyan tábla, amelyben el vannak tárolva a felhasználóv-név jelszó párosok /pl. "user", "accounts", "felhasznaloifiokok"/		d) username : string, Adatbázis felhasználóneve /pl. "root", stb./		e) password : string, Adatbázis jelszava /pl. " " (abban az esetben, ha nincs jelszó), stb./		f) port : string, Adatbázis elérését biztosító hálózati port /pl. "3306" (XAMPP használat esetén, localhoston), stb./3) Függvény paraméterei-----------------------Az osztály egy bool visszatérésű függvényt tartalmaz Authentication néven. Négy string típusú paramétert vár, amelyben át kell adni:		a) username : string, Felhasználónév, amelyet a felhasználó megad a bejelentkező form beviteli mezőjében		b) password : string, Jelszó, amelyet a felhasználó megad a bejelentkező form adott beviteli mezőjében		c) usernameTableField : string, Felhasználónevet-jelszót tartalmazó tábla felhasználóneveket tartalmazó oszlopának neve		d) passwordTableField : string, felhasználónevet-jelszót tartalmazó tábla jelszavakat tartalmazó oszlopának neve4) Validátor működése---------------------Az Authentication függvény szignatúrája szerint logikai true vagy false értékkel térhet vissza. A függvényben egy bool típusú lokális 'validEntry'azonosítóval ellátott változó kerül visszatérésre.Egy MySqlDataReader példány végez elöltesztelős ciklusban olvasást a paraméterben átadott felhasználónv és jelszó oszlopokban olvasást adott adatbázistáblából.Minden egyes ciklusfutásban a soron következő táblarekord felhasználónév-jelszó párosát lementi egy 'validUsername' és 'validPassword' string típusúlokális változóba (ciklusfutás végéig), amelyet összehasonlít a paraméterként átadott felhasználónév és jelszavával. A ciklus addig fut, ameddig vansoron következő felhasználónevet-jelszó párost tartalmazó táblarekord.Amennyiben az egyezést vizsgáló elágazás egyezést talál a paraméterben átadott felhasználónév-jelszó párossal és a ciklusfutás során adatbázisból kiolvasottfelhasználónév-jelszó párosában úgy 'break' utasítással megtöri az adott ciklusfutást és logikai true értéket ad a 'validEntry' változónak, amellyelvisszatér a függvény.Amennyiben adatbázisban nem létező felhasználónév-jelszó párost adott meg a felhasználó, úgy a 'validEntry' változó logikai false értéket kap. A ciklusfutásfolytatódik, amíg létezik soron következő rekord és keresi a további egyezőségeket. Amennyiben nem talál a ciklus futás során eygetlen egy egyező valid felhasználónév-jelszópárost a függvény, úgy logikai false értékekel tér vissza.5) Példakód a függvény alkalmazására------------------------------------...using JuhaszBence.CSharp.LoginValidator;...private void EnterApplication(){	string inputUsername = textBoxUsername.Text;	string inputPassword = textBoxPassword.Text;		Login login = new Login("127.0.0.1", "usermanagement", "user", "root", "", "3306");		bool authentication = login.Authentication(inputUsername, inputPassword, "username", "password");		if (authentication)	{		MessageBox.Show("Sikeres belépés!");	}	else	{		MessageBox.Show("Nincs ilyen felhasználói fiók!");	}}...6) Szoftverlicensz------------------A validátor teljesen ingyenes licenszen alapul; szabadon továbbadható, terjeszthető, továbbfejleszthető.A validátor C# programozási nyelven (.NET Framework 4.6.1) íródott, MySQL adatbázisokhoz.